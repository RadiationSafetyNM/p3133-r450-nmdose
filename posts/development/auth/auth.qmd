---
title: "인증시스템"
description: "KeyCloak"
author: "BenKorea"
date: "2024-06-22"
date-modified: last-modified
categories: [authentication, KeyCloak]
---

# Keycloak 기반 인증 시스템 설계

## 1. Keycloak 도입 배경
- 개인정보보호법 등 국내외 보안 규정 준수를 위해 신뢰성 있는 인증 시스템 필요
- Keycloak은 오픈소스이며, 다양한 인증 프로토콜(OIDC, SAML 등) 지원
- 중앙집중식 사용자 관리 및 역할 기반 접근 제어(RBAC) 제공

## 2. 사용자 유형 정의
- **관리자(nmdose-superuser)**  
  - 시스템 설정, 사용자 관리, 감사 기록 조회 등 모든 권한 보유
- **일반 사용자**  
  - 선량 정보 조회 등 제한된 기능만 접근 가능

## 3. Keycloak Realm 및 역할(Role) 설계
- `nmdose` 전용 Realm 생성
- 역할(Role) 예시:
    - `nmdose-superuser`: 관리자 권한
    - `nmdose-user`: 일반 사용자 권한

## 4. 계정명 규칙
- Vault 등 외부 시스템과의 연동을 고려하여, 계정명에 하이폰(`-`) 사용
  예: `nmdose-superuser`

## 5. 인증 및 권한 부여 흐름
1. 사용자는 Keycloak을 통해 로그인
2. Keycloak에서 역할(Role) 정보를 토큰에 포함
3. 애플리케이션은 토큰을 검증하고, 역할에 따라 접근 권한 부여

## 6. Keycloak 연동 예시 (Python)
```python
import requests

KEYCLOAK_URL = "https://keycloak.example.com"
REALM = "nmdose"
CLIENT_ID = "nmdose-app"

def get_token(username, password):
    url = f"{KEYCLOAK_URL}/realms/{REALM}/protocol/openid-connect/token"
    data = {
        "grant_type": "password",
        "client_id": CLIENT_ID,
        "username": username,
        "password": password,
    }
    response = requests.post(url, data=data)
    return response.json()

# 사용 예시
token = get_token("nmdose-superuser", "비밀번호")
```

## 7. 향후 계획
- Keycloak MFA(2차 인증) 적용
- 감사 로그 및 사용자 활동 모니터링 강화
- 외부 시스템(Vault 등)과의 연동 자동화

---

## 설치
외부서버를 모사하기 위해 docker로 설치한다.

```{r keycloak-docker, eval=FALSE, filename="projects/keycloak-server/docker-compose.yml"}
version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: kc-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: kcuser
      POSTGRES_PASSWORD: kcpass
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: keycloak
    command:
      - start
      - --hostname=auth.example.com
      - --db=postgres
      - --db-url-host=kc-db
      - --db-username=kcuser
      - --db-password=kcpass
      - --db-url-database=keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: unless-stopped
```
일단은 운영모드로 설치해본다.
```{r keycloak-docker-envr, eval=FALSE, filename="bash"}
sudo docker compose up -d
```
도커로 잘 실행되었다고 생각되어도 8080에서 접속되지 않는 이유는?
HTTPS로 접속하기 위해서 키와 인증서가 필요
무료는 Let's Encrypt
그러나 도메인이 필요하므로

병원 내부망(도메인 없는 사설망)에서는
공인 인증서가 아닌
“자가서명 인증서” 또는 “사내 CA 인증서”를 사용해
HTTPS 암호화 통신을 적용하는 것이 업계표준

openssl은 대부분의 wsl2에 설치되어 있어 진행
```{r openssl, eval=FALSE, filename="bash"}
openssl req \
  -x509 \
  -newkey rsa:2048 \
  -keyout mykey.key \
  -out mycert.crt \
  -days 365 \
  -nodes \
  -subj "/C=KR/ST=Seoul/L=Seoul/O=KCCH/OU=RPythonStudy/CN=localhost" \
  -addext "subjectAltName = DNS:localhost, IP:127.0.0.1, DNS:keycloak-server"
```


